{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "title": "Gentrap Pipeline Summary",
    "description": "Schema for full Gentrap pipeline runs",
    "type": "object",
    "required": [ "samples", "gentrap" ],

    "properties": {

      "meta": {
        "description": "Pipeline run metadata",
        "type": "object",
        "required": [ "pipeline_version", "last_commit_hash", "pipeline_name" ],

        "properties": {

          "pipeline_version": {
            "description": "Pipeline release version",
            "type": "string"
          },

          "last_commit_hash": {
            "description": "Commit hash of the source code repository at the time the pipeline was compiled",
            "type": "string",
            "minLength": 7
          },

          "pipeline_name": {
            "description": "Name of the pipeline that created the summary file",
            "type": "string"
          },

          "run_name": {
            "description": "User-supplied name of the pipeline run",
            "type": "string"
          }
        }
      },

      "samples": {
        "description": "All samples analyzed in the Gentrap run",
        "type": "object",
        "minItems": 1,
        "additionalProperties": { "$ref": "#/definitions/sample" }
      },

      "gentrap": {
        "description": "Pipeline-level Gentrap information",
        "type": "object",
        "required": [ "files", "executables", "settings" ],

        "properties": {

          "files": {
            "description": "File groups tracked by Gentrap",
            "type": "object",

            "properties": {

              "pipeline": {
                "description": "Files tracked by Gentrap",
                "type": "object",
                "required": [ "annotation_refflat" ],
                "additionalProperties": { "$ref": "#/definitions/file" }
              }
            }
          },

          "executables": {
            "description": "Executables used in the Gentrap run",
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                { "$ref": "#/definitions/executable" },
                { "$ref": "#/definitions/jar" }
              ]
            }
          },

          "settings": {
            "description": "Settings used for the Gentrap run",
            "type": "object",
            "required": [
              "call_variants", "remove_ribosomal_reads",
              "expression_measures", "strand_protocol", "reference"
            ],

            "properties": {

              "aligner": { "type": "string" },
              "call_variants": { "type": "boolean" },
              "remove_ribosomal_reads": { "type": "boolean" },

              "expression_measures": {
                "description": "Expression measurements for each sample",
                "type": "array",
                "minItems": 0,
                "items": {
                  "type": "string",
                  "enum": [
                    "FragmentsPerGene", "FragmentsPerExon",
                    "BasesPerGene", "BasesPerExon", "BaseCounts",
                    "CufflinksStrict", "CufflinksGuided", "CufflinksBlind"
                  ]
                }
              },

              "strand_protocol": {
                "description": "Wet lab protocol that was used to track origin strand of reads",
                "type": "string",
                "enum": [ "NonSpecific", "Dutp" ]
              },

              "reference": {
                "description": "Reference sequence information",
                "type": "object",
                "required": [ "contigs" ],

                "properties": {

                  "contigs": {
                    "description": "All contigs / chromosomes in the reference sequence",
                    "type": "object",
                    "minItems": 1,
                    "additionalProperties": { "$ref": "#/definitions/referenceContig" }
                  },

                  "species": {
                    "description": "Reference sequence species name",
                    "type": "string"
                  },

                  "name": {
                    "description": "Build name of the reference sequence. For example, hg38 for the human genome.",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },

  "definitions": {

    "sample": {
      "description": "A single Gentrap sample",
      "type": "object",
      "required": [ "libraries", "gentrap" ],

      "properties": {

        "libraries": {
          "description": "All libraries belonging to the sample",
          "type": "object",
          "minItems": 1,
          "additionalProperties": { "$ref": "#/definitions/library" }
        },

        "gentrap": {
          "description": "Sample-level Gentrap information",
          "required": [ "files" ],

          "properties": {

            "files": {
              "description": "File groups tracked by Gentrap",
              "type": "object",
              "required": [ "pipeline" ],

              "properties": {

                "pipeline": {
                  "description": "Sample-level Gentrap files",
                  "type": "object",
                  "anyOf": [
                    {
                      "required": [ "alignment" ],
                      "additionalProperties": { "$ref": "#/definitions/file" }
                    },
                    {
                      "required": [ "output_bam" ],
                      "additionalProperties": { "$ref": "#/definitions/file" }
                    }
                  ]
                }
              },
              "additionalProperties": { "$ref": "#/definitions/fileGroup" }
            }
          }
        },

        "bammetrics": {
          "description": "Sample-level mapping metrics",
          "type": "object",
          "required": [ "files", "executables", "stats" ],

          "properties": {

            "files": {
              "description": "File groups tracked by BamMetrics",
              "type": "object",
              "required": [ "pipeline" ],

              "properties": {

                "pipeline": {
                  "description": "Initial input files and final output files in Mapping",
                  "type": "object",
                  "additionalProperties": { "$ref": "#/definitions/file" }
                }
              },
              "additionalProperties": { "$ref": "#/definitions/fileGroup" }
            },

            "executables": {
              "description": "Executables used in BamMetrics",
              "type": "object",
              "additionalProperties": {
                "anyOf": [
                  { "$ref": "#/definitions/executable" },
                  { "$ref": "#/definitions/jar" }
                ]
              }
            },

            "stats": { "$ref": "#/definitions/bamMetricsStats" }
          }
        }
      }
    },

    "library": {
      "description": "A single Gentrap library",
      "type": "object",
      "required": [ "mapping", "bammetrics", "gentrap" ],

      "properties": {

        "mapping": {
          "description": "Library-level mapping information",
          "type": "object",
          "required": [ "files", "executables", "settings" ],

          "properties": {

            "files": {
              "oneOf": [
                {
                  "description": "File groups tracked by Mapping",
                  "type": "object",
                  "required": [ "pipeline" ],
                  "properties": {
                    "pipeline": {
                      "description": "Initial input files and final output files in Mapping",
                      "type": "object",
                      "required": [ "input_R1", "output_bamfile" ],
                      "additionalProperties": { "$ref": "#/definitions/file" }
                    }
                  },
                  "additionalProperties": { "$ref": "#/definitions/fileGroup" }
                },
                {
                  "description": "File groups tracked by Mapping",
                  "type": "object",
                  "required": [ "pipeline" ],
                  "properties": {
                    "pipeline": {
                      "description": "Initial input files and final output files in Mapping",
                      "type": "object",
                      "required": [ "input_R1", "output_bam" ],
                      "additionalProperties": { "$ref": "#/definitions/file" }
                    }
                  },
                  "additionalProperties": { "$ref": "#/definitions/fileGroup" }
                }
              ]
            },

            "executables": {
              "description": "Executables used in Mapping",
              "type": "object",
              "additionalProperties": {
                "anyOf": [
                  { "$ref": "#/definitions/executable" },
                  { "$ref": "#/definitions/jar" }
                ]
              }
            },

            "settings": {
              "description": "Settings used for Mapping",
              "type": "object",
              "required": [ "aligner", "chunking", "numberChunks", "skip_flexiprep", "skip_markduplicates", "skip_metrics" ],

              "properties": {

                "aligner": { "type": "string" },

                "chunking": {
                  "description": "Whether the input FASTQ files are split (chunked), aligned separately, and then merged, or not",
                  "type": "boolean"
                },

                "numberChunks": {
                  "description": "If chungking is enabled, the number of FASTQ chunks",
                  "type": [ "null", "integer" ]
                },

                "skip_flexipep": {
                  "description": "Whether the Flexiprep pipeline run is skipped or not",
                  "type": "boolean"
                },

                "skip_markduplicates": {
                  "description": "Whether the Picard MarkDuplicates step is skipped or not",
                  "type": "boolean"
                },

                "skip_metrics": {
                  "description": "Whether the alignment metrics gethering (by the BamMetrics) pipeline is skipped or not",
                  "type": "boolean"
                }
              }
            }
          }
        },

        "bammetrics": {
          "description": "Library-level mapping metrics",
          "type": "object",
          "required": [ "files", "executables", "stats" ],

          "properties": {

            "files": {
              "description": "File groups tracked by BamMetrics",
              "type": "object",
              "required": [ "pipeline" ],

              "properties": {

                "pipeline": {
                  "description": "Initial input files and final output files in Mapping",
                  "type": "object",
                  "additionalProperties": { "$ref": "#/definitions/file" }
                }
              },
              "additionalProperties": { "$ref": "#/definitions/fileGroup" }
            },

            "executables": {
              "description": "Executables used in BamMetrics",
              "type": "object",
              "additionalProperties": {
                "anyOf": [
                  { "$ref": "#/definitions/executable" },
                  { "$ref": "#/definitions/jar" }
                ]
              }
            },

            "stats": { "$ref": "#/definitions/bamMetricsStats" }
          }
        },

        "gentrap": {
          "description": "Library-level Gentrap information",
          "type": "object",
          "required": [ "files", "stats" ],

          "properties": {

            "files": {
              "description": "File groups tracked by Gentrap",
              "type": "object",
              "required": [ "pipeline" ],

              "properties": {

                "pipeline": {
                  "description": "Library-level Gentrap files",
                  "type": "object",
                  "anyOf": [
                    {
                      "required": [ "alignment" ],
                      "additionalProperties": { "$ref": "#/definitions/file" }
                    },
                    {
                      "required": [ "output_bam" ],
                      "additionalProperties": { "$ref": "#/definitions/file" }
                    }
                  ]
                }
              },
              "additionalProperties": { "$ref": "#/definitions/fileGroup" }
            }
          }
        }
      }
    },

    "referenceContig": {
      "description": "Entry for a single contig in a reference sequence",
      "type": "object",
      "required": [ "md5", "length" ],

      "properties": {

        "md5": {
          "description": "MD5 checksum of the contig",
          "type": "string"
        },

        "length": {
          "description": "Length of the contig in base pairs",
          "type": "integer"
        }
      }
    },

    "fileGroup": {
      "description": "File entries grouped as properties of an object",
      "type": "object",
      "additionalProperties": { "$ref": "#/definitions/file" }
    },

    "file": {
      "description": "A single file entry",
      "type": "object",
      "required": [ "path", "md5" ],
      "additionalProperties": false,

      "properties": {

        "md5":    { "type": "string" },
        "sha1":   { "type": "string" },
        "sha256": { "type": "string" },

        "path":   {
          "description": "Absolute file system path of the file",
          "type": "string"
        }
      }
    },

    "executable": {
      "description": "Entry for storing executable information",
      "type": "object",
      "required": [ "version" ],
      "additionalProperties": false,

      "properties": {

        "version":  {
          "description": "Version of the executable, null if not available",
          "type": ["string", "null"]
        },

        "md5": {
          "description": "MD5 checksum of the executable, null if not available",
          "type": ["string", "null"]
        },

        "path": {
          "description": "Path to executable",
          "type": ["string", "null"]
        },

        "jar_md5": {
          "description": "MD5 checksum of the JAR (only for JAR-packaged tools)",
          "type": ["string", "null"]
        },

        "java_md5": {
          "description": "MD5 checksum of the java executable (only for JAR-packaged tools)",
          "type": ["string", "null"]
        },

        "java_version": {
          "description": "Version of the java executable used to execute the JAR",
          "type": ["string", "null"]
        },

        "jar_path": {
          "description": "Path to the JAR file (null if not available)",
          "type": ["string", "null"]
        }
      }
    },

    "jar": {
      "description": "Entry for storing tools packaged as JAR files",
      "type": "object",
      "required": [ "version", "java_md5", "java_version", "jar_path" ],
      "additionalProperties": false,

      "properties": {

        "version":  {
          "description": "Version of the JAR package, null if not available",
          "type": ["string", "null"]
        },

        "java_version": {
          "description": "Version of the java executable used to execute the JAR",
          "type": "string"
        },

        "java_md5": {
          "description": "MD5 checksum of the java executable",
          "type": ["string", "null"]
        },

        "jar_path": {
          "description": "Path to the JAR file (null if not available)",
          "type": ["string", "null"]
        }
      }
    },

    "bamMetricsStats": {
      "description": "Stats summary entry for bamMetrics output",
      "type": "object",
      "required": [ "CollectAlignmentSummaryMetrics", "biopet_flagstat", "rna" ],

      "properties": {
        "CollectAlignmentSummaryMetrics": { "$ref": "#/definitions/statsAlignmentSummary" },

        "biopet_flagstat": { "$ref": "#/definitions/statsBiopetFlagstat" },

        "rna": { "$ref": "#/definitions/statsRnaSeqMetrics" },

        "CollectInsertSizeMetrics": { "$ref": "#/definitions/statsInsertSizeMetrics" }
      }
    },

    "statsAlignmentSummary": {
      "description": "Metrics gathered by Picard CollectAlignmentSummaryMetrics",
      "type": "object",
      "additionalProperties": false,

      "properties": {

        "FIRST_OF_PAIR": { "$ref": "#/definitions/statsAlignmentSummaryPair" },
        "SECOND_OF_PAIR": { "$ref": "#/definitions/statsAlignmentSummaryPair" },
        "PAIR": { "$ref": "#/definitions/statsAlignmentSummaryPair" },
        "UNPAIRED": { "$ref": "#/definitions/statsAlignmentSummaryPair" }
      }
    },

    "statsAlignmentSummaryPair": {
      "description": "Alignment statistics gathered by Picard CollectAlignmentSummaryMetrics, per pair",
      "type": "object",
      "required": [ "PCT_CHIMERAS", "PF_HQ_ALIGNED_READS", "PF_HQ_ERROR_RATE", "PF_INDEL_RATE", "PF_MISMATCH_RATE",
                    "PF_READS", "TOTAL_READS" ],

      "properties": {

        "BAD_CYCLES": { "type": "integer" },
        "MEAN_READ_LENGTH": { "type": "number" },
        "PCT_ADAPTER": { "type": "number" },
        "PCT_CHIMERAS": { "type": "number" },
        "PCT_PF_READS": { "type": "number" },
        "PCT_PF_READS_ALIGNED": { "type": "number" },
        "PCT_READS_ALIGNED_IN_PAIRS": { "type": "number" },
        "PF_ALIGNED_BASES": { "type": "integer" },
        "PF_HQ_ALIGNED_BASES": { "type": "integer" },
        "PF_HQ_ALIGNED_Q20_BASES": { "type": "integer" },
        "PF_HQ_ALIGNED_READS": { "type": "integer" },
        "PF_HQ_ERROR_RATE": { "type": "number" },
        "PF_HQ_MEDIAN_MISMATCHES": { "type": "number" },
        "PF_INDEL_RATE": { "type": "number" },
        "PF_MISMATCH_RATE": { "type": "number" },
        "PF_NOISE_READS": { "type": "integer" },
        "PF_READS": { "type": "integer" },
        "PF_READS_ALIGNED": { "type": "integer" },
        "READS_ALIGNED_IN_PAIRS": { "type": "integer" },
        "STRAND_BALANCE": { "type": "number" },
        "TOTAL_READS": { "type": "integer" }
      }
    },

    "statsBiopetFlagstat": {
      "description": "Alignment statistics gathered by the BiopetFlagstat tool",
      "type": "object",
      "required": [ "All", "Mapped", "ReadPaired", "ProperPair" ],

      "properties": {

        "All": { "type": "integer" },
        "Duplicates": { "type": "integer" },
        "First inverted, second read inverted": { "type": "integer" },
        "First inverted, second read normal": { "type": "integer" },
        "First normal, second read inverted (paired end orientation)": { "type": "integer" },
        "First normal, second read normal": { "type": "integer" },
        "FirstOfPair": { "type": "integer" },
        "MAPQ>0": { "type": "integer" },
        "MAPQ>10": { "type": "integer" },
        "MAPQ>20": { "type": "integer" },
        "MAPQ>30": { "type": "integer" },
        "MAPQ>40": { "type": "integer" },
        "MAPQ>50": { "type": "integer" },
        "MAPQ>60": { "type": "integer" },
        "Mapped": { "type": "integer" },
        "Mate in same strand": { "type": "integer" },
        "Mate on other chr": { "type": "integer" },
        "MateNegativeStrand": { "type": "integer" },
        "MateUnmapped": { "type": "integer" },
        "NotPrimaryAlignment": { "type": "integer" },
        "ProperPair": { "type": "integer" },
        "ReadFailsVendorQualityCheck": { "type": "integer" },
        "ReadNegativeStrand": { "type": "integer" },
        "ReadPaired": { "type": "integer" },
        "SecondOfPair": { "type": "integer" },
        "SecondaryOrSupplementary": { "type": "integer" },
        "SupplementaryAlignment": { "type": "integer" }
      }
    },

    "statsInsertSizeMetrics": {
      "description": "Alignment statistics gathered by Picard CollectInsertSizeMetrics tool",
      "type": "object",
      "required": [ "metrics" ],

      "properties": {

        "metrics": {
          "oneOf":
            [
              {
                "description": "Metrics values",
                "type": "object",
                "required": [ "MAX_INSERT_SIZE", "MEAN_INSERT_SIZE", "MEDIAN_INSERT_SIZE", "MIN_INSERT_SIZE",
                "PAIR_ORIENTATION", "READ_PAIRS", "STANDARD_DEVIATION" ],

                "properties": {
                  "MAX_INSERT_SIZE": { "type": "integer" },
                  "MEAN_INSERT_SIZE": { "type": "number" },
                  "MEDIAN_ABSOLUTE_DEVIATION": { "type": "number" },
                  "MEDIAN_INSERT_SIZE": { "type": "number" },
                  "MIN_INSERT_SIZE": { "type": "integer" },
                  "PAIR_ORIENTATION": { "type": "string" },
                  "READ_PAIRS": { "type": "integer" },
                  "STANDARD_DEVIATION": { "type": "number" },
                  "WIDTH_OF_10_PERCENT": { "type": "integer" },
                  "WIDTH_OF_20_PERCENT": { "type": "integer" },
                  "WIDTH_OF_30_PERCENT": { "type": "integer" },
                  "WIDTH_OF_40_PERCENT": { "type": "integer" },
                  "WIDTH_OF_50_PERCENT": { "type": "integer" },
                  "WIDTH_OF_60_PERCENT": { "type": "integer" },
                  "WIDTH_OF_70_PERCENT": { "type": "integer" },
                  "WIDTH_OF_80_PERCENT": { "type": "integer" },
                  "WIDTH_OF_90_PERCENT": { "type": "integer" },
                  "WIDTH_OF_99_PERCENT": { "type": "integer" }
                }
              },
              { "type": "null" }
            ]
        }
      }
    },

    "statsRnaSeqMetrics": {
      "description": "RNA-seq statistics gathered by Picard CollectRnaSeqMetrics tool",
      "type": "object",
      "required": [ "metrics" ],

      "properties": {

        "metrics": {
          "description": "Metrics values",
          "type": "object",

          "required": [ "CODING_BASES", "CORRECT_STRAND_READS", "IGNORED_READS", "INCORRECT_STRAND_READS",
            "INTERGENIC_BASES", "INTRONIC_BASES", "MEDIAN_3PRIME_BIAS", "MEDIAN_5PRIME_BIAS",
            "MEDIAN_5PRIME_TO_3PRIME_BIAS", "PF_ALIGNED_BASES", "PF_BASES", "UTR_BASES" ],

          "properties": {
            "CODING_BASES": { "type": "integer" },
            "CORRECT_STRAND_READS": { "type": "integer" },
            "IGNORED_READS": { "type": "integer" },
            "INCORRECT_STRAND_READS": { "type": "integer" },
            "INTERGENIC_BASES": { "type": "integer" },
            "INTRONIC_BASES": { "type": "integer" },
            "MEDIAN_3PRIME_BIAS": { "type": "number" },
            "MEDIAN_5PRIME_BIAS": { "type": "number" },
            "MEDIAN_5PRIME_TO_3PRIME_BIAS": { "type": ["number", "string"] },
            "MEDIAN_CV_COVERAGE": { "type": "number" },
            "PCT_CODING_BASES": { "type": "number" },
            "PCT_CORRECT_STRAND_READS": { "type": "number" },
            "PCT_INTERGENIC_BASES": { "type": "number" },
            "PCT_INTRONIC_BASES": { "type": "number" },
            "PCT_MRNA_BASES": { "type": "number" },
            "PCT_RIBOSOMAL_BASES": { "type": ["number", "string"] },
            "PCT_USABLE_BASES": { "type": "number" },
            "PCT_UTR_BASES": { "type": "number" },
            "PF_ALIGNED_BASES": { "type": "integer" },
            "PF_BASES": { "type": "integer" },
            "RIBOSOMAL_BASES": { "type": ["integer", "string"] },
            "UTR_BASES": { "type": "integer" }
          }
        },

        "histogram": {

          "description": "Histogram values (used for plotting).",
          "type": "object",

          "properties": {

            "normalized_position": {
              "type": "array",
              "items": { "type": "number" }
            },

            "All_Reads.normalized_coverage": {
              "type": "array",
              "items": { "type": "number" }
            }
          }
        }
      }
    }
  }
}

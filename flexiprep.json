{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Flexiprep Pipeline Summary",
  "description": "Schema for full Flexiprep pipeline runs",
  "type": "object",
  "required": [ "samples", "meta" ],

  "properties": {

    "meta": {
      "description": "Pipeline run metadata",
      "type": "object",
      "required": [ "pipeline_version", "last_commit_hash", "pipeline_name" ],

      "properties": {

        "pipeline_version": {
            "description": "Pipeline release version",
          "type": "string"
        },

        "last_commit_hash": {
          "description": "Commit hash of the source code repository at the time the pipeline was compiled",
          "type": "string",
          "minLength": 7
        },

        "pipeline_name": {
          "description": "Name of the pipeline that created the summary file",
          "type": "string"
        },

        "run_name": {
          "description": "User-supplied name of the pipeline run",
          "type": "string"
        }
      }
    },

    "samples": {
      "description": "All samples analyzed in the Flexiprep run",
      "type": "object",
      "minItems": 1,
      "additionalProperties": { "$ref": "#/definitions/sample" }
    }
  },

  "definitions": {

    "sample": {
      "description": "A single Flexiprep sample",
      "type": "object",
      "required": [ "libraries" ],

      "properties": {

        "libraries": {
          "description": "All libraries belonging to the sample",
          "type": "object",
          "minItems": 1,
          "additionalProperties": { "$ref": "#/definitions/library" }
        }
      }
    },

    "library": {
      "description": "A single Flexiprep library",
      "type": "object",
      "required": [ "flexiprep" ],

      "properties": {

        "flexiprep": {
          "description": "Library-level Flexiprep information",
          "type": "object",
          "required": [ "files", "executables", "settings", "stats" ],

          "properties": {

            "files": {
              "description": "File groups tracked by Flexiprep",
              "type": "object",
              "required": [ "pipeline", "fastqc_R1" ],

              "properties": {

                "pipeline": {
                  "description": "Initial input files and final output files in Flexiprep",
                  "type": "object",
                  "required": [ "input_R1", "output_R1" ],
                  "additionalProperties": { "$ref": "#/definitions/file" }
                },

                "fastqc_R1": {
                  "description": "FastQC files of the R1 read",
                  "type": "object",
                  "additionalProperties": { "$ref": "#/definitions/file" }
                }
              },
              "additionalProperties": { "$ref": "#/definitions/fileGroup" }
            },

            "executables": {
              "description": "Executables used in Flexiprep",
              "type": "object",
              "additionalProperties": {
                "anyOf": [
                  { "$ref": "#/definitions/executable" },
                  { "$ref": "#/definitions/jar" }
                ]
              }
            },

            "settings": {
              "description": "Settings used for the Flexiprep run",
              "type": "object",
              "required": [ "skip_trim", "skip_clip", "paired" ],

              "properties": {

                "skip_trim": {
                  "description": "Whether base quality trimming step is skipped or not",
                  "type": "boolean"
                },

                "skip_clip": {
                  "description": "Whether adapter clipping step is skipped or not",
                  "type": "boolean"
                },

                "paired": {
                  "description": "Whether the input sequence is paired or not",
                  "type": "boolean"
                }
              }
            },

            "stats": {
              "description": "Statistics gathered by Flexiprep",
              "type": "object",
              "required": [ "fastqc_R1", "seqstat_R1" ],

              "properties": {

                "seqstat_R1": { "$ref": "#/definitions/statsSeqstat" },
                "seqstat_R2": { "$ref": "#/definitions/statsSeqstat" },
                "seqstat_R1_qc": { "$ref": "#/definitions/statsSeqstat" },
                "fastqc_R1": { "$ref": "#/definitions/statsFastqc" },
                "fastqc_R2": { "$ref": "#/definitions/statsFastqc" },
                "fastqc_R1_qc": { "$ref": "#/definitions/statsFastqc" },
                "fastqc_R2_qc": { "$ref": "#/definitions/statsFastqc" },
                "clipping_R1": { "$ref": "#/definitions/statsCutadapt" },
                "clipping_R2": { "$ref": "#/definitions/statsCutadapt" },

                "fastq_sync": {
                  "description": "Statistics for read syncing, after clipping",
                  "type": "object",

                  "properties": {

                    "num_reads_discarded_R1": { "type": "integer" },
                    "num_reads_discarded_R2": { "type": "integer" },
                    "num_reads_kept": { "type": "integer" }
                  }
                },

                "trimming": {
                  "description": "Statistics for base-quality trimming, based on sickle results",
                  "type": "object",
                  "required": [ "num_reads_discarded_total", "num_reads_kept" ],
                  "additionalProperties": false,

                  "properties": {

                    "num_reads_discarded_total": { "type": "integer" },
                    "num_reads_kept": { "type": "integer" },
                    "num_reads_discarded_R1": { "type": "integer" },
                    "num_reads_discarded_R2": { "type": "integer" },
                    "num_reads_discarded_both": { "type": "integer" },
                    "num_reads_kept_R1": { "type": "integer" },
                    "num_reads_kept_R2": { "type": "integer" }
                  }
                }
              }
            }
          }
        }
      }
    },

    "fileGroup": {
      "description": "File entries grouped as properties of an object",
      "type": "object",
      "additionalProperties": { "$ref": "#/definitions/file" }
    },

    "file": {
      "description": "A single file entry",
      "type": "object",
      "required": [ "path", "md5" ],
      "additionalProperties": false,

      "properties": {

        "md5":    { "type": "string" },
        "sha1":   { "type": "string" },
        "sha256": { "type": "string" },

        "path":   {
          "description": "Absolute file system path of the file",
          "type": "string"
        }
      }
    },

    "executable": {
      "description": "Entry for storing executable information",
      "type": "object",
      "required": [ "version" ],
      "additionalProperties": false,

      "properties": {

        "version":  {
          "description": "Version of the executable, null if not available",
          "type": ["string", "null"]
        },

        "md5": {
          "description": "MD5 checksum of the executable, null if not available",
          "type": ["string", "null"]
        },

        "path": {
          "description": "Path to executable",
          "type": ["string", "null"]
        },

        "jar_md5": {
          "description": "MD5 checksum of the JAR (only for JAR-packaged tools)",
          "type": ["string", "null"]
        },

        "java_md5": {
          "description": "MD5 checksum of the java executable (only for JAR-packaged tools)",
          "type": ["string", "null"]
        },

        "java_version": {
          "description": "Version of the java executable used to execute the JAR",
          "type": ["string", "null"]
        },

        "jar_path": {
          "description": "Path to the JAR file (null if not available)",
          "type": ["string", "null"]
        }
      }
    },

    "jar": {
      "description": "Entry for storing tools packaged as JAR files",
      "type": "object",
      "required": [ "version", "java_md5", "java_version", "jar_path" ],
      "additionalProperties": false,

      "properties": {

        "version":  {
          "description": "Version of the JAR package, null if not available",
          "type": ["string", "null"]
        },

        "java_version": {
          "description": "Version of the java executable used to execute the JAR",
          "type": "string"
        },

        "java_md5": {
          "description": "MD5 checksum of the java executable",
          "type": ["string", "null"]
        },

        "jar_path": {
          "description": "Path to the JAR file (null if not available)",
          "type": ["string", "null"]
        }
      }
    },

    "statsSeqstat": {
      "description": "Sequence statistics created by SeqStat (part of the Flexiprep pipeline)",
      "type": "object",
      "required": [ "bases", "reads" ],
      "additionalProperties": false,

      "properties": {

        "bases": {
          "description": "Base pair-level statistics",
          "type": "object",
          "required": [ "nucleotides", "num_total", "num_qual" ],

          "properties": {

            "nucleotides": {
              "description": "Counts of specific nucleotides across all reads (including ambiguous characters as outlined in http://www.ncbi.nlm.nih.gov/pmc/articles/PMC2865858/",
              "type": "object",
              "additionalProperties": false,

              "patternProperties": {
                "^[ACGTURYMKSWHBVDN]$": { "type": "integer" }
              }
            },

            "num_total": {
              "description": "Total number of bases",
              "type": "integer"
            },

            "num_qual": {
              "description": "Array of base counts by quality, from quality 0 to 60",
              "type": "array",
              "items": { "type": "integer" }
            }
          }
        },

        "reads": {
          "description": "Read-level statistics",
          "type": "object",
          "required": [ "len_max", "len_min", "num_with_n", "num_total", "num_avg_qual_gte", "qual_encoding" ],

          "properties": {

            "len_max": {
              "description": "Length of longest read",
              "type": "integer"
            },

            "len_min": {
              "description": "Length of shortest read",
              "type": "integer"
            },

            "num_with_n": {
              "description": "Number of reads that contains at least one 'N' or 'n' base",
              "type": "integer"
            },

            "num_total": {
              "description": "Total number of reads",
              "type": "integer"
            },

            "num_avg_qual_gte": {
              "description": "Number of reads with quality greater than a certain number",
              "type": "object",
              "additionalProperties": false,

              "patternProperties": {
                "^[0-9]+$": { "type": "integer" }
              }
            },

            "qual_encoding": {
              "description": "Quality encoding; which can be sanger (ASCII offset 33), solexa, or illumina (both with ASCII offset 64)",
              "type": "string",
              "enum": [ "sanger", "illumina", "solexa" ]
            }
          }
        }
      }
    },

    "statsFastqc": {
      "description": "Sequence statistics created by FastQC (part of the Flexiprep pipeline)",
      "type": "object",
      "required": [ "per_base_sequence_quality", "per_base_sequence_content" ],

      "properties": {

        "per_base_sequence_quality": {
          "description": "Quality statistics per base position",
          "type": "object",
          "additionalProperties": false,

          "patternProperties": {
            "^([0-9]+|[0-9]+-[0-9]+)$": {
              "description": "Aggregate statistics per base position or per group of base positions",
              "type": "object",
              "required": [ "mean", "median", "lower_quartile", "upper_quartile", "percentile_10th", "percentile_90th" ],
              "properties": {

                "mean": { "type": "number" },
                "median": { "type": "number" },
                "lower_quartile": { "type": "number" },
                "upper_quartile": { "type": "number" },
                "percentile_10th": { "type": "number" },
                "percentile_90th": { "type": "number" }
              }
            }
          }
        },

        "per_base_sequence_content": {
          "description": "Composition statistics per base position",
          "type": "object",
          "additionalProperties": false,

          "patternProperties": {
            "^([0-9]+|[0-9]+-[0-9]+)$": {
              "description": "Base composition per base position or per group of base positions",
              "type": "object",
              "additionalProperties": false,

              "patternProperties": {
                "^[ACGTURYMKSWHBVDN]$": { "type": "number" }
              }
            }
          }
        }
      }
    },

    "statsCutadapt": {
      "description": "Sequence statistics from a Cutadapt run (part of the Flexiprep pipeline)",
      "type": "object",
      "required": [ "adapters", "num_reads_affected", "num_reads_discarded_too_long", "num_reads_discarded_too_short" ],

      "properties": {

        "num_reads_affected": { "type": "integer" },
        "num_reads_discarded_too_long": { "type": "integer" },
        "num_reads_discarded_too_short": { "type": "integer" },

        "adapters": {
          "description": "Adapters found in the library",
          "type": "object",
          "additionalProperties": false,

          "patternProperties": {
            "^.+$": {
              "oneOf": [
                {
                  "description": "Adapter sequence and how many times it is clipped by Cutadapt. This is in version 0.4.0 or earlier.",
                  "type": "array",
                  "items": { "type": [ "string", "integer" ] },
                  "minItems": 2,
                  "maxItems": 2
                },
                {
                  "description": "Cutadapt clip counts. This is in version 0.5.0",
                  "type": "integer",
                  "format": "int32"
                },
                {
                  "description": "Adapter sequence name, the sequence itself, and how many times it is clipped. In version 0.6.0 or higher.",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "sequence": {
                      "description": "Adapter sequence.",
                      "type": "string"
                    },
                    "count": {
                      "count": {
                        "description": "How many times the adapter is clipped.",
                        "type": "integer",
                        "format": "int32"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    }
  }
}
